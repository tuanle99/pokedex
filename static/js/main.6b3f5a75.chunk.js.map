{"version":3,"sources":["Components/Header.js","Components/Footer.js","pages/Home.js","pages/SelectPokemon.js","pages/ListAllPokemon.js","App.js","reportWebVitals.js","index.js"],"names":["LinkTab","props","Tab","component","onClick","event","preventDefault","Header","history","useHistory","Box","sx","width","Tabs","onChange","newValue","i","push","handleNavigate","label","Footer","Container","mt","textAlign","Divider","Home","e","SelectPokemon","current_index","match","params","id","useState","notFound","setNotFound","name","setName","image_front","setImage_Front","stats","setStats","national_no","setNational_NO","type","setType","species","setSpecies","height","setHeight","weight","setWeight","Item","styled","Paper","theme","typography","body2","padding","spacing","color","palette","text","secondary","type_color","type_select","stat_name","sn","stat_bar_color","stat","useEffect","fetch","then","res","json","data","forms","sprites","other","front_default","types","catch","console","log","genera","language","genus","Grid","container","item","xs","style","fontSize","fontWeight","charAt","toUpperCase","slice","md","src","alt","px","TableContainer","Table","TableBody","TableRow","TableCell","map","t","m","borderRadius","backgroundColor","display","marginInline","base_stat","Stack","LinearProgress","variant","value","ListAllPokemon","loading","setLoading","listPokemon","setListPokemon","maxCount","setMaxCount","getAllPokemon","url","Math","floor","count","results","image_url","CircularProgress","p","ButtonBase","Card","CardMedia","image","CardContent","flex","Pagination","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6b3f5a75.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Tabs from \"@mui/material/Tabs\";\r\nimport Tab from \"@mui/material/Tab\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction LinkTab(props) {\r\n  return (\r\n    <Tab\r\n      component=\"a\"\r\n      onClick={(event) => {\r\n        event.preventDefault();\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nfunction Header() {\r\n  const history = useHistory();\r\n\r\n  const handleChange = (event, newValue) => {\r\n    handleNavigate(newValue);\r\n  };\r\n\r\n  function handleNavigate(i) {\r\n    switch (i) {\r\n      case 1:\r\n        history.push(\"/listPokemon\");\r\n        break;\r\n      default:\r\n        history.push(\"/home\");\r\n        break;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Box sx={{ width: \"100%\" }}>\r\n      <Tabs onChange={handleChange} aria-label=\"header nav\">\r\n        <LinkTab label=\"Home\" />\r\n        <LinkTab label=\"Pokemon\" />\r\n      </Tabs>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Container, Divider } from \"@mui/material\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <Container sx={{ mt: \"2rem\", textAlign: \"center\" }}>\r\n      <Divider />\r\n      All Code Belong to Tuan Le\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction Home() {\r\n  const history = useHistory();\r\n\r\n  function handlepage(e) {\r\n    history.push(\"/pokemon/1\");\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={handlepage}>Home Page</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Grid,\r\n  Container,\r\n  Paper,\r\n  styled,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableRow,\r\n  LinearProgress,\r\n  Stack,\r\n} from \"@mui/material\";\r\n\r\nfunction SelectPokemon(props) {\r\n  let current_index = props.match.params.id;\r\n\r\n  const [notFound, setNotFound] = useState(false);\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [image_front, setImage_Front] = useState(\"\");\r\n  const [stats, setStats] = useState([]);\r\n  const [national_no, setNational_NO] = useState(\"\");\r\n  const [type, setType] = useState([]);\r\n  const [species, setSpecies] = useState(\"\");\r\n  const [height, setHeight] = useState(0.0);\r\n  const [weight, setWeight] = useState(0.0);\r\n\r\n  const Item = styled(Paper)(({ theme }) => ({\r\n    ...theme.typography.body2,\r\n    padding: theme.spacing(1),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  }));\r\n\r\n  function type_color(type_select) {\r\n    switch (type_select) {\r\n      case \"normal\":\r\n        return \"#A8A77A\";\r\n      case \"fire\":\r\n        return \"#EE8130\";\r\n      case \"water\":\r\n        return \"#6390F0\";\r\n      case \"electric\":\r\n        return \"#F7D02C\";\r\n      case \"grass\":\r\n        return \"#7AC74C\";\r\n      case \"ice\":\r\n        return \"#96D9D6\";\r\n      case \"fighting\":\r\n        return \"#C22E28\";\r\n      case \"poison\":\r\n        return \"#A33EA1\";\r\n      case \"ground\":\r\n        return \"#E2BF65\";\r\n      case \"flying\":\r\n        return \"#A98FF3\";\r\n      case \"psychic\":\r\n        return \"#F95587\";\r\n      case \"bug\":\r\n        return \"#A6B91A\";\r\n      case \"rock\":\r\n        return \"#B6A136\";\r\n      case \"ghost\":\r\n        return \"#735797\";\r\n      case \"dragon\":\r\n        return \"#6F35FC\";\r\n      case \"dark\":\r\n        return \"#705746\";\r\n      case \"steel\":\r\n        return \"#B7B7CE\";\r\n      case \"fairy\":\r\n        return \"#D685AD\";\r\n      default:\r\n        return \"\";\r\n    }\r\n  }\r\n\r\n  function stat_name(sn) {\r\n    switch (sn) {\r\n      case \"hp\":\r\n        return \"HP\";\r\n      case \"attack\":\r\n        return \"Attack\";\r\n      case \"defense\":\r\n        return \"Defense\";\r\n      case \"special-attack\":\r\n        return \"Sp.Atk\";\r\n      case \"special-defense\":\r\n        return \"Sp.Def\";\r\n      case \"speed\":\r\n        return \"Speed\";\r\n      default:\r\n        return \"\";\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetch(`https://pokeapi.co/api/v2/pokemon/${current_index}`)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setName(data.forms[0].name);\r\n        setImage_Front(data.sprites.other[\"official-artwork\"].front_default);\r\n        setStats(data.stats);\r\n        if (data.id < 10) {\r\n          setNational_NO(`00${data.id}`);\r\n        } else if (data.id < 100) {\r\n          setNational_NO(`0${data.id}`);\r\n        } else {\r\n          setNational_NO(`${data.id}`);\r\n        }\r\n        setType(data.types);\r\n        setHeight(data.height / 10);\r\n        setWeight(data.weight / 10);\r\n      })\r\n      .catch((e) => {\r\n        console.log(\"Not current index\");\r\n        setNotFound(true);\r\n      });\r\n\r\n    fetch(`https://pokeapi.co/api/v2/pokemon-species/${current_index}`)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        for (let i of data.genera) {\r\n          if (i.language.name === \"en\") {\r\n            setSpecies(i.genus);\r\n          }\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  function setCap() {\r\n    return name.charAt(0).toUpperCase() + name.slice(1);\r\n  }\r\n\r\n  const normalise = (value) => ((value - 0) * 100) / (180 - 0);\r\n\r\n  function stat_bar_color(stat) {\r\n    if (stat < 60) {\r\n      return \"#ff7f0f\";\r\n    } else if (stat < 90) {\r\n      return \"#ffdd57\";\r\n    } else if (stat < 120) {\r\n      return \"#a0e515\";\r\n    } else {\r\n      return \"#00c2b8\";\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {notFound ? (\r\n        <div>Pokemon Not Found</div>\r\n      ) : (\r\n        <Container>\r\n          <Grid container item sx={{ mt: \"10rem\" }}>\r\n            <Grid item xs={12}>\r\n              <Item style={{ fontSize: \"20px\", fontWeight: \"bold\" }}>\r\n                {setCap()}\r\n              </Item>\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <img\r\n                src={image_front}\r\n                alt=\"front\"\r\n                style={{ width: \"100%\", height: \"100%\" }}\r\n                sx={{ px: \"2rem\" }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <Item sx={{ mt: \"2rem\" }}>Pokédex data</Item>\r\n              <TableContainer component={Paper}>\r\n                <Table aria-label=\"simple table\">\r\n                  <TableBody>\r\n                    <TableRow>\r\n                      <TableCell style={{ width: \"30%\" }}>National №</TableCell>\r\n                      <TableCell>\r\n                        <b>{national_no}</b>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <TableCell style={{ width: \"30%\" }}>Type</TableCell>\r\n                      <TableCell style={{ padding: 0 }}>\r\n                        {type.map((t) => (\r\n                          <div\r\n                            key={t.type.name}\r\n                            sx={{ m: 1 }}\r\n                            style={{\r\n                              borderRadius: 10,\r\n                              padding: 5,\r\n                              backgroundColor: type_color(t.type.name),\r\n                              display: \"inline-block\",\r\n                              width: \"3rem\",\r\n                              textAlign: \"center\",\r\n                              marginInline: \"5px\",\r\n                            }}\r\n                          >\r\n                            {t.type.name}\r\n                          </div>\r\n                        ))}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <TableCell style={{ width: \"30%\" }}>Species</TableCell>\r\n                      <TableCell>{species}</TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <TableCell style={{ width: \"30%\" }}>Height</TableCell>\r\n                      <TableCell>{height} m</TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <TableCell style={{ width: \"30%\" }}>Weight</TableCell>\r\n                      <TableCell>{weight} kg</TableCell>\r\n                    </TableRow>\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={12} sx={{ mt: \"2rem\" }}>\r\n            <Item>Stats</Item>\r\n            <TableContainer component={Paper}>\r\n              <Table aria-label=\"simple table\">\r\n                <TableBody>\r\n                  {stats.map((stat) => (\r\n                    <TableRow key={stat.stat.name}>\r\n                      <TableCell style={{ width: \"10%\", textAlign: \"right\" }}>\r\n                        {stat_name(stat.stat.name)}\r\n                      </TableCell>\r\n                      <TableCell style={{ width: \"5%\", textAlign: \"left\" }}>\r\n                        {stat.base_stat}\r\n                      </TableCell>\r\n                      <TableCell style={{ width: \"85%\", textAlign: \"left\" }}>\r\n                        <Stack sx={{ color: stat_bar_color(stat.base_stat) }}>\r\n                          <LinearProgress\r\n                            variant=\"determinate\"\r\n                            color=\"inherit\"\r\n                            value={normalise(stat.base_stat)}\r\n                          />\r\n                        </Stack>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </Grid>\r\n        </Container>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SelectPokemon;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Container,\r\n  Grid,\r\n  Card,\r\n  CardMedia,\r\n  CardContent,\r\n  ButtonBase,\r\n  Pagination,\r\n  CircularProgress,\r\n} from \"@mui/material\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction ListAllPokemon(props) {\r\n  const history = useHistory();\r\n  const [loading, setLoading] = useState(true);\r\n  const [listPokemon, setListPokemon] = useState([]);\r\n  const [maxCount, setMaxCount] = useState(0);\r\n\r\n  useEffect(() => {\r\n    getAllPokemon(\"https://pokeapi.co/api/v2/pokemon?offset=0&limit=12\");\r\n  }, []);\r\n\r\n  function getAllPokemon(url) {\r\n    setListPokemon([]);\r\n    fetch(url)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setMaxCount(Math.floor(data.count / 12));\r\n\r\n        for (let i of data.results) {\r\n          fetch(i.url)\r\n            .then((res) => res.json())\r\n            // eslint-disable-next-line no-loop-func\r\n            .then((res) => {\r\n              setListPokemon((listPokemon) => [\r\n                ...listPokemon,\r\n                {\r\n                  id: res.id,\r\n                  name: i.name,\r\n                  url: i.url,\r\n                  image_url:\r\n                    res.sprites.other[\"official-artwork\"].front_default,\r\n                },\r\n              ]);\r\n            });\r\n        }\r\n        setLoading(false);\r\n      });\r\n  }\r\n\r\n  function setCap(name) {\r\n    return name.charAt(0).toUpperCase() + name.slice(1);\r\n  }\r\n\r\n  const handlePage = (event, value) => {\r\n    getAllPokemon(\r\n      `https://pokeapi.co/api/v2/pokemon?offset=${(value - 1) * 12}&limit=12`\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Container sx={{ mt: \"5rem\" }}>\r\n      {loading ? (\r\n        <Container sx={{ textAlign: \"center\" }}>\r\n          <CircularProgress />\r\n        </Container>\r\n      ) : (\r\n        <Container>\r\n          <Grid container>\r\n            {listPokemon.map((p) => (\r\n              <Grid item xs={6} md={3} key={p.id} sx={{ p: \"1rem\" }}>\r\n                <ButtonBase\r\n                  onClick={(event) => {\r\n                    history.push(`/pokemon/${p.id}`);\r\n                  }}\r\n                >\r\n                  <Card>\r\n                    <CardMedia\r\n                      component=\"img\"\r\n                      image={p.image_url}\r\n                      alt={p.name}\r\n                    />\r\n                    <CardContent>\r\n                      {p.id}.{setCap(p.name)}\r\n                    </CardContent>\r\n                  </Card>\r\n                </ButtonBase>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n          <Container style={{ flex: 1 }} sx={{ m: \"1rem\" }}>\r\n            <Pagination count={maxCount} onChange={handlePage} />\r\n          </Container>\r\n        </Container>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default ListAllPokemon;\r\n","import \"./utils/api\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\n//Component\nimport Header from \"./Components/Header\";\nimport Footer from \"./Components/Footer\";\n//Pages\nimport Home from \"./pages/Home\";\nimport SelectPokemon from \"./pages/SelectPokemon\";\nimport ListAllPokemon from \"./pages/ListAllPokemon\";\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/pokemon/:id\" component={SelectPokemon} />\n        <Route exact path=\"/listPokemon/\" component={ListAllPokemon} />\n      </Switch>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}