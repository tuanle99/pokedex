{"version":3,"sources":["Components/Header.js","Components/Footer.js","images/legend.png","pages/Home.js","Components/PokeData.js","Components/PokeStat.js","pages/SelectPokemon.js","pages/ListAllPokemon.js","App.js","reportWebVitals.js","index.js"],"names":["LinkTab","props","Tab","component","onClick","event","preventDefault","Header","history","useHistory","Box","sx","width","Tabs","onChange","newValue","i","push","handleNavigate","label","Footer","Container","mt","textAlign","Divider","Home","Grid","xs","color","fontWeight","fontFamily","fontSize","src","image","alt","style","PokeData","national_no","type","species","height","weight","abilities","type_color","type_select","TableContainer","Paper","Table","TableBody","TableRow","TableCell","padding","map","t","m","borderRadius","backgroundColor","name","display","marginInline","a","str","charAt","toUpperCase","slice","is_hidden","PokeStat","stats","stat_bar_color","stat","stat_name","sn","base_stat","Stack","LinearProgress","variant","value","total","s","totalStat","SelectPokemon","current_index","match","params","id","useState","notFound","setNotFound","loading","setLoading","setName","image_front","setImage_Front","setStats","setNational_NO","setType","setSpecies","setHeight","setWeight","setAbilities","Item","styled","theme","typography","body2","spacing","palette","text","secondary","useEffect","fetch","then","res","json","data","forms","sprites","other","front_default","types","e","listAbilities","ability","catch","console","log","genera","language","genus","CircularProgress","container","item","md","px","Typography","ListAllPokemon","listPokemon","setListPokemon","maxCount","setMaxCount","getAllPokemon","url","Math","floor","count","Promise","all","results","resolve","reject","image_url","p","ButtonBase","Card","CardMedia","CardContent","flex","Pagination","sort","b","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5b2af903.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Tabs from \"@mui/material/Tabs\";\r\nimport Tab from \"@mui/material/Tab\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction LinkTab(props) {\r\n  return (\r\n    <Tab\r\n      component=\"a\"\r\n      onClick={(event) => {\r\n        event.preventDefault();\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nfunction Header() {\r\n  const history = useHistory();\r\n\r\n  const handleChange = (event, newValue) => {\r\n    handleNavigate(newValue);\r\n  };\r\n\r\n  function handleNavigate(i) {\r\n    switch (i) {\r\n      case 1:\r\n        history.push(\"/listPokemon\");\r\n        break;\r\n      default:\r\n        history.push(\"/\");\r\n        break;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Box sx={{ width: \"100%\" }}>\r\n      <Tabs onChange={handleChange} aria-label=\"header nav\">\r\n        <LinkTab label=\"Home\" />\r\n        <LinkTab label=\"Pokemon\" />\r\n      </Tabs>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Container, Divider } from \"@mui/material\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <Container sx={{ mt: \"2rem\", textAlign: \"center\" }}>\r\n      <Divider />\r\n      All Code Belong to Tuan Le\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","export default __webpack_public_path__ + \"static/media/legend.5feff1b6.png\";","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Container, Grid } from \"@mui/material\";\r\nimport image from \"../images/legend.png\";\r\n\r\nfunction Home() {\r\n  const history = useHistory();\r\n\r\n  const title_css = {\r\n    textAlign: \"center\",\r\n    color: \"black\",\r\n    fontWeight: \"bold\",\r\n    fontFamily: \"cursive\",\r\n    fontSize: 50,\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Grid xs={12} sx={title_css}>\r\n        Welcome to Tuan's Pokedex\r\n      </Grid>\r\n      <Grid xs={12}>\r\n        <img src={image} alt=\"homepage\" style={{ width: \"100%\" }} />\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","/* eslint-disable array-callback-return */\r\nimport React from \"react\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableRow,\r\n  Paper,\r\n} from \"@mui/material\";\r\n\r\nfunction PokeData(props) {\r\n  const { national_no, type, species, height, weight, abilities } = props;\r\n\r\n  function type_color(type_select) {\r\n    switch (type_select) {\r\n      case \"normal\":\r\n        return \"#A8A77A\";\r\n      case \"fire\":\r\n        return \"#EE8130\";\r\n      case \"water\":\r\n        return \"#6390F0\";\r\n      case \"electric\":\r\n        return \"#F7D02C\";\r\n      case \"grass\":\r\n        return \"#7AC74C\";\r\n      case \"ice\":\r\n        return \"#96D9D6\";\r\n      case \"fighting\":\r\n        return \"#C22E28\";\r\n      case \"poison\":\r\n        return \"#A33EA1\";\r\n      case \"ground\":\r\n        return \"#E2BF65\";\r\n      case \"flying\":\r\n        return \"#A98FF3\";\r\n      case \"psychic\":\r\n        return \"#F95587\";\r\n      case \"bug\":\r\n        return \"#A6B91A\";\r\n      case \"rock\":\r\n        return \"#B6A136\";\r\n      case \"ghost\":\r\n        return \"#735797\";\r\n      case \"dragon\":\r\n        return \"#6F35FC\";\r\n      case \"dark\":\r\n        return \"#705746\";\r\n      case \"steel\":\r\n        return \"#B7B7CE\";\r\n      case \"fairy\":\r\n        return \"#D685AD\";\r\n      default:\r\n        return \"\";\r\n    }\r\n  }\r\n\r\n  function setCap(str) {\r\n    return str.charAt(0).toUpperCase() + str.slice(1);\r\n  }\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table aria-label=\"simple table\">\r\n        <TableBody>\r\n          <TableRow>\r\n            <TableCell style={{ width: \"30%\" }}>National №</TableCell>\r\n            <TableCell>\r\n              <b>{national_no}</b>\r\n            </TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell style={{ width: \"30%\" }}>Type</TableCell>\r\n            <TableCell style={{ padding: 0 }}>\r\n              {type.map((t) => (\r\n                <div\r\n                  key={t.type.name}\r\n                  sx={{ m: 1 }}\r\n                  style={{\r\n                    borderRadius: 10,\r\n                    padding: 5,\r\n                    backgroundColor: type_color(t.type.name),\r\n                    display: \"inline-block\",\r\n                    width: \"3rem\",\r\n                    textAlign: \"center\",\r\n                    marginInline: \"5px\",\r\n                  }}\r\n                >\r\n                  {t.type.name}\r\n                </div>\r\n              ))}\r\n            </TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell style={{ width: \"30%\" }}>Species</TableCell>\r\n            <TableCell>{species}</TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell style={{ width: \"30%\" }}>Height</TableCell>\r\n            <TableCell>{height} m</TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell style={{ width: \"30%\" }}>Weight</TableCell>\r\n            <TableCell>{weight} kg</TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell style={{ width: \"30%\" }}>Abilities</TableCell>\r\n            <TableCell>\r\n              {abilities.map((a) => (\r\n                <div key={a.name}>\r\n                  <p>\r\n                    {setCap(a.name)}\r\n                    {a.is_hidden ? \" (hidden ability)\" : \"\"}\r\n                  </p>\r\n                </div>\r\n              ))}\r\n            </TableCell>\r\n          </TableRow>\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n\r\nexport default PokeData;\r\n","import React from \"react\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableRow,\r\n  Paper,\r\n  Stack,\r\n  LinearProgress,\r\n} from \"@mui/material\";\r\n\r\nfunction PokeStat(props) {\r\n  const { stats } = props;\r\n\r\n  const normalise = (value) => ((value - 0) * 100) / (180 - 0);\r\n\r\n  function stat_bar_color(stat) {\r\n    if (stat < 60) {\r\n      return \"#ff7f0f\";\r\n    } else if (stat < 90) {\r\n      return \"#ffdd57\";\r\n    } else if (stat < 120) {\r\n      return \"#a0e515\";\r\n    } else {\r\n      return \"#00c2b8\";\r\n    }\r\n  }\r\n\r\n  function stat_name(sn) {\r\n    switch (sn) {\r\n      case \"hp\":\r\n        return \"HP\";\r\n      case \"attack\":\r\n        return \"Attack\";\r\n      case \"defense\":\r\n        return \"Defense\";\r\n      case \"special-attack\":\r\n        return \"Sp.Atk\";\r\n      case \"special-defense\":\r\n        return \"Sp.Def\";\r\n      case \"speed\":\r\n        return \"Speed\";\r\n      default:\r\n        return \"\";\r\n    }\r\n  }\r\n\r\n  function totalStat() {\r\n    let total = 0;\r\n    stats.map((s) => {\r\n      total += s.base_stat;\r\n    });\r\n    return total;\r\n  }\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table aria-label=\"simple table\">\r\n        <TableBody>\r\n          {stats.map((stat) => (\r\n            <TableRow key={stat.stat.name}>\r\n              <TableCell style={{ width: \"10%\", textAlign: \"right\" }}>\r\n                {stat_name(stat.stat.name)}\r\n              </TableCell>\r\n              <TableCell style={{ width: \"5%\", textAlign: \"left\" }}>\r\n                {stat.base_stat}\r\n              </TableCell>\r\n              <TableCell style={{ width: \"85%\", textAlign: \"left\" }}>\r\n                <Stack sx={{ color: stat_bar_color(stat.base_stat) }}>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"inherit\"\r\n                    value={normalise(stat.base_stat)}\r\n                  />\r\n                </Stack>\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n          <TableRow>\r\n            <TableCell style={{ width: \"10%\", textAlign: \"right\" }}>\r\n              Total\r\n            </TableCell>\r\n            <TableCell>\r\n              <b>{totalStat()}</b>\r\n            </TableCell>\r\n          </TableRow>\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n\r\nexport default PokeStat;\r\n","/* eslint-disable array-callback-return */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Grid,\r\n  Container,\r\n  Paper,\r\n  styled,\r\n  CircularProgress,\r\n  Typography,\r\n} from \"@mui/material\";\r\n\r\nimport PokeData from \"../Components/PokeData\";\r\nimport PokeStat from \"../Components/PokeStat\";\r\n\r\nfunction SelectPokemon(props) {\r\n  let current_index = props.match.params.id;\r\n\r\n  const [notFound, setNotFound] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [image_front, setImage_Front] = useState(\"\");\r\n  const [stats, setStats] = useState([]);\r\n  const [national_no, setNational_NO] = useState(\"\");\r\n  const [type, setType] = useState([]);\r\n  const [species, setSpecies] = useState(\"\");\r\n  const [height, setHeight] = useState(0.0);\r\n  const [weight, setWeight] = useState(0.0);\r\n  const [abilities, setAbilities] = useState([]);\r\n\r\n  const Item = styled(Paper)(({ theme }) => ({\r\n    ...theme.typography.body2,\r\n    padding: theme.spacing(1),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  }));\r\n\r\n  useEffect(() => {\r\n    fetch(`https://pokeapi.co/api/v2/pokemon/${current_index}`)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setName(data.forms[0].name);\r\n        setImage_Front(data.sprites.other[\"official-artwork\"].front_default);\r\n        setStats(data.stats);\r\n        if (data.id < 10) {\r\n          setNational_NO(`00${data.id}`);\r\n        } else if (data.id < 100) {\r\n          setNational_NO(`0${data.id}`);\r\n        } else {\r\n          setNational_NO(`${data.id}`);\r\n        }\r\n        setType(data.types);\r\n        setHeight(data.height / 10);\r\n        setWeight(data.weight / 10);\r\n        data.abilities.map((e) => {\r\n          setAbilities((listAbilities) => [\r\n            ...listAbilities,\r\n            {\r\n              name: e.ability.name,\r\n              is_hidden: e.is_hidden,\r\n            },\r\n          ]);\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(\"Not current index\");\r\n        setNotFound(true);\r\n      });\r\n\r\n    fetch(`https://pokeapi.co/api/v2/pokemon-species/${current_index}`)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        for (let i of data.genera) {\r\n          if (i.language.name === \"en\") {\r\n            setSpecies(i.genus);\r\n          }\r\n        }\r\n      });\r\n\r\n    setLoading(false);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  function setCap() {\r\n    return name.charAt(0).toUpperCase() + name.slice(1);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {notFound ? (\r\n        <div>Pokemon Not Found</div>\r\n      ) : loading ? (\r\n        <Container sx={{ textAlign: \"center\" }}>\r\n          <CircularProgress />\r\n        </Container>\r\n      ) : (\r\n        <Container>\r\n          <Grid container item sx={{ mt: \"10rem\" }}>\r\n            <Grid item xs={12}>\r\n              <Item style={{ fontSize: \"20px\", fontWeight: \"bold\" }}>\r\n                {setCap()}\r\n              </Item>\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <img\r\n                src={image_front}\r\n                alt=\"front\"\r\n                style={{ width: \"100%\", height: \"100%\" }}\r\n                sx={{ px: \"2rem\" }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <Item sx={{ mt: \"2rem\" }}>Pokédex data</Item>\r\n              <PokeData\r\n                national_no={national_no}\r\n                type={type}\r\n                species={species}\r\n                height={height}\r\n                weight={weight}\r\n                abilities={abilities}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={12} sx={{ mt: \"2rem\" }}>\r\n            <Item>\r\n              <Typography variant=\"h5\">Base Stats</Typography>\r\n            </Item>\r\n            <PokeStat stats={stats} />\r\n          </Grid>\r\n        </Container>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SelectPokemon;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Container,\r\n  Grid,\r\n  Card,\r\n  CardMedia,\r\n  CardContent,\r\n  ButtonBase,\r\n  Pagination,\r\n  CircularProgress,\r\n} from \"@mui/material\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction ListAllPokemon(props) {\r\n  const history = useHistory();\r\n  const [loading, setLoading] = useState(true);\r\n  const [listPokemon, setListPokemon] = useState([]);\r\n  const [maxCount, setMaxCount] = useState(0);\r\n\r\n  useEffect(() => {\r\n    getAllPokemon(\"https://pokeapi.co/api/v2/pokemon?offset=0&limit=12\");\r\n  }, []);\r\n\r\n  function getAllPokemon(url) {\r\n    fetch(url)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setMaxCount(Math.floor(data.count / 12));\r\n        setListPokemon([]);\r\n        let allPromise = Promise.all(\r\n          data.results.map((e) => {\r\n            return new Promise((resolve, reject) => {\r\n              resolve(e);\r\n            });\r\n          })\r\n        );\r\n        // console.log(allPromise);\r\n        allPromise.then((e) => {\r\n          // eslint-disable-next-line array-callback-return\r\n          e.map((res) => {\r\n            fetch(res.url)\r\n              .then((e) => e.json())\r\n              .then((e) => {\r\n                setListPokemon((listPokemon) => [\r\n                  ...listPokemon,\r\n                  {\r\n                    id: e.id,\r\n                    name: res.name,\r\n                    url: res.url,\r\n                    image_url:\r\n                      e.sprites.other[\"official-artwork\"].front_default,\r\n                  },\r\n                ]);\r\n              });\r\n          });\r\n        });\r\n      });\r\n    setLoading(false);\r\n  }\r\n\r\n  function setCap(name) {\r\n    return name.charAt(0).toUpperCase() + name.slice(1);\r\n  }\r\n\r\n  const handlePage = (event, value) => {\r\n    getAllPokemon(\r\n      `https://pokeapi.co/api/v2/pokemon?offset=${(value - 1) * 12}&limit=12`\r\n    );\r\n    listPokemon.sort((a, b) => (a.id > b.id ? 1 : -1));\r\n  };\r\n\r\n  return (\r\n    <Container sx={{ mt: \"5rem\" }}>\r\n      {loading ? (\r\n        <Container sx={{ textAlign: \"center\" }}>\r\n          <CircularProgress />\r\n        </Container>\r\n      ) : (\r\n        <Container>\r\n          <Grid container>\r\n            {listPokemon.map((p) => (\r\n              <Grid item xs={6} md={3} key={p.id} sx={{ p: \"1rem\" }}>\r\n                <ButtonBase\r\n                  onClick={(event) => {\r\n                    history.push(`/pokemon/${p.id}`);\r\n                  }}\r\n                >\r\n                  <Card>\r\n                    <CardMedia\r\n                      component=\"img\"\r\n                      image={p.image_url}\r\n                      alt={p.name}\r\n                    />\r\n                    <CardContent>\r\n                      {p.id}.{setCap(p.name)}\r\n                    </CardContent>\r\n                  </Card>\r\n                </ButtonBase>\r\n              </Grid>\r\n            ))}\r\n            {/* {Promise.all(listPokemon).then((p) => {\r\n              <div>{p.name}</div>;\r\n            })} */}\r\n          </Grid>\r\n          <Container style={{ flex: 1 }} sx={{ m: \"1rem\" }}>\r\n            <Pagination count={maxCount} onChange={handlePage} />\r\n          </Container>\r\n        </Container>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default ListAllPokemon;\r\n","import \"./utils/api\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\n//Component\nimport Header from \"./Components/Header\";\nimport Footer from \"./Components/Footer\";\n//Pages\nimport Home from \"./pages/Home\";\nimport SelectPokemon from \"./pages/SelectPokemon\";\nimport ListAllPokemon from \"./pages/ListAllPokemon\";\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <Switch>\n        <Route exact path={[\"/\", \"/pokedex\"]} component={Home} />\n        <Route exact path=\"/pokemon/:id\" component={SelectPokemon} />\n        <Route exact path=\"/listPokemon/\" component={ListAllPokemon} />\n      </Switch>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}